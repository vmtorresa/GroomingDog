-- MySQL Script generated by MySQL Workbench
-- Sun Sep  9 13:37:03 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema GroomingDog
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema GroomingDog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GroomingDog` DEFAULT CHARACTER SET utf8 ;
USE `GroomingDog` ;

-- -----------------------------------------------------
-- Table `GroomingDog`.`rolCargoPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`rolCargoPersona` (
  `idRolPersona` INT NOT NULL,
  `nombRol` VARCHAR(45) NOT NULL,
  `usuarioRol` VARCHAR(45) NOT NULL,
  `claveRol` VARCHAR(45) NOT NULL,
  `descripRol` VARCHAR(45) NOT NULL,
  `observRol` VARCHAR(45) NULL,
  PRIMARY KEY (`idRolPersona`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`persona` (
  `identifPersona` INT(10) NOT NULL COMMENT 'Éste el identificador único del cliente.',
  `nombPersona` VARCHAR(45) NOT NULL COMMENT 'Nombre o nombres del cliente.',
  `apellPersona` VARCHAR(45) NOT NULL COMMENT 'Apellido o apellidos del cliente.',
  `emailPersona` VARCHAR(45) NOT NULL COMMENT 'Dirección de correo electrónica del cliente.',
  `tipoIdentifPerson` VARCHAR(45) NOT NULL COMMENT 'Tipo de documento de identificación del cliente.',
  `FechaNacimPers` DATE NOT NULL COMMENT 'Fecha de nacimiento del cliente.',
  `rolCargoPersona_idRolPersona` INT NOT NULL,
  PRIMARY KEY (`identifPersona`, `rolCargoPersona_idRolPersona`),
  INDEX `fk_persona_rolCargoPersona1_idx` (`rolCargoPersona_idRolPersona` ASC),
  CONSTRAINT `fk_persona_rolCargoPersona1`
    FOREIGN KEY (`rolCargoPersona_idRolPersona`)
    REFERENCES `GroomingDog`.`rolCargoPersona` (`idRolPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`desparacitacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`desparacitacion` (
  `CodDesparas` INT(10) NOT NULL COMMENT 'Éste el el identificador único del servicio de desparasitación.',
  `tipoDesparac` VARCHAR(45) NOT NULL COMMENT 'El el agente desparasitante, por lo general un producto farmacológico.',
  PRIMARY KEY (`CodDesparas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`Domicilio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`Domicilio` (
  `idDomicilio` INT(10) NOT NULL,
  `direccDomic` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idDomicilio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`factura` (
  `codFactura` INT(10) NOT NULL COMMENT 'Éste es el identificador único de la factura.',
  `descripComprFact` VARCHAR(45) NOT NULL COMMENT 'Nombre de todos los productos y servicios adquiridos y pagados en la factura.',
  `cantidPrdFactu` INT(10) NOT NULL COMMENT 'Ésta entidad representa la generación de factura, con sus principales características.',
  `valorTotFactu` INT(10) NOT NULL,
  `Domicilio_idDomicilio` INT(10) NOT NULL,
  PRIMARY KEY (`codFactura`, `Domicilio_idDomicilio`),
  INDEX `fk_factura_Domicilio1_idx` (`Domicilio_idDomicilio` ASC),
  CONSTRAINT `fk_factura_Domicilio1`
    FOREIGN KEY (`Domicilio_idDomicilio`)
    REFERENCES `GroomingDog`.`Domicilio` (`idDomicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`ruta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`ruta` (
  `idRuta` INT(10) NOT NULL COMMENT 'Éste es el identificador único del servicio de ruta.',
  `kilometrosRuta` INT(10) NOT NULL COMMENT 'Distancia que recorrerá la mascota.',
  `nombTrayecto` VARCHAR(45) NOT NULL COMMENT 'Nombre del sitio, modalidad o trayecto de la ruta.',
  `descripRutaPaseo` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el trayecto por donde se paseará a la mascota, con sus principales características.',
  `observsRuta` VARCHAR(45) NULL COMMENT 'Observaciones de características o condiciones particulares concernientes a la ruta.',
  PRIMARY KEY (`idRuta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`paseoMascota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`paseoMascota` (
  `idPaseo` INT(10) NOT NULL COMMENT 'Es el identificador único del servicio de paseo.',
  `direcRecibida` VARCHAR(45) NOT NULL COMMENT 'Dirección donde se recibirá la mascota para llevarla a paseo.',
  `direcEntrega` VARCHAR(45) NOT NULL COMMENT 'Dirección donde se entregará la mascota luego de culminado el paseo.',
  `DescripPaseo` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el proceso de sacar a pasear la mascota por alguna ruta o sitio en particular, con sus principales características.',
  `ruta_idRuta` INT(10) NOT NULL,
  PRIMARY KEY (`idPaseo`, `ruta_idRuta`),
  INDEX `fk_paseoMascota_ruta1_idx` (`ruta_idRuta` ASC),
  CONSTRAINT `fk_paseoMascota_ruta1`
    FOREIGN KEY (`ruta_idRuta`)
    REFERENCES `GroomingDog`.`ruta` (`idRuta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`localYGuarderia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`localYGuarderia` (
  `idGuarderia` INT(10) NOT NULL COMMENT 'Éste es el identificador único del servicio de guardería.',
  `dirGuarde` VARCHAR(45) NOT NULL COMMENT 'Dirección de domicilio del propietario de la mascota.',
  `horaInicGuar` DATETIME NOT NULL COMMENT 'Fecha y hora en que se inicia el servio de guardería.',
  `horaFinGuar` DATETIME NOT NULL COMMENT 'Fecha y hora en que finaliza el servio de guardería.',
  `dirAlternaGuard` VARCHAR(45) NOT NULL COMMENT 'Dirección alternativa del propietario de la mascota.',
  `tamanoMascota` VARCHAR(10) NOT NULL COMMENT 'Es el tamaño de la mascota clasificado en una de tres categorías, que puede ser grande, mediana o pequeña.',
  `DescripGuard` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el servicios de guardería, con sus principales características.',
  PRIMARY KEY (`idGuarderia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`baniarMascota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`baniarMascota` (
  `idBanio` INT(10) NOT NULL COMMENT 'Éste es el identificador único del servicio de baño.',
  `horaInicBanio` DATETIME NOT NULL COMMENT 'Hora en que inicia el proceso de bañar la mascota.',
  `horaFinBanio` DATETIME NOT NULL COMMENT 'Hora en que finaliza el proceso de bañar la mascota.',
  `descripBanio` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el proceso baño con sus principales atributos.',
  PRIMARY KEY (`idBanio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`estiloCortePelaje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`estiloCortePelaje` (
  `idCorte` INT(10) NOT NULL COMMENT 'Es el identificador único del servicio de corte de pelo de la mascota.',
  `nombLookCorte` VARCHAR(45) NOT NULL COMMENT 'Los looks de cortes de pelo tienen una referencia identificadora.',
  `DescripCorte` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el proceso de hacerle un corte del pelaje a la mascota, con sus principales características.',
  PRIMARY KEY (`idCorte`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`reserva` (
  `iddReserva` INT(10) NOT NULL COMMENT 'Éste es el identificador único de la reserva.',
  `nombReserva` VARCHAR(15) NOT NULL COMMENT 'Éste es el nombre de la reserva.',
  `fechaTramiteReser` DATETIME NOT NULL COMMENT 'Fecha y hora en que se tramitó la reserva.',
  `horaInicioReserva` DATETIME NOT NULL COMMENT 'Fecha y hora de inicio de los servicios reservados.',
  `finReserva` DATETIME NOT NULL COMMENT 'Fecha y hora de fin de los servicios reservados.',
  `descripReser` VARCHAR(15) NOT NULL COMMENT 'Ésta entidad representa el proceso de hacer una reserva de servicio en la tienda, con sus principales características.',
  `cancelarReserva` TINYINT NOT NULL,
  `baniarMascota_idBanio` INT(10) NOT NULL,
  `desparacitacion_CodDesparas` INT(10) NOT NULL,
  `factura_codFactura` INT(10) NOT NULL,
  `factura_Domicilio_idDomicilio` INT(10) NOT NULL,
  `persona_identifPersona` INT(10) NOT NULL,
  `estiloCortePelaje_idCorte` INT(10) NOT NULL,
  `paseoMascota_idPaseo` INT(10) NOT NULL,
  `servicioGuarderia_idGuarderia` INT(10) NOT NULL,
  `baniarMascota_idBanio1` INT(10) NOT NULL,
  `estiloCortePelaje_idCorte1` INT(10) NOT NULL,
  PRIMARY KEY (`iddReserva`, `baniarMascota_idBanio`, `desparacitacion_CodDesparas`, `factura_codFactura`, `factura_Domicilio_idDomicilio`, `persona_identifPersona`, `estiloCortePelaje_idCorte`, `paseoMascota_idPaseo`, `servicioGuarderia_idGuarderia`, `baniarMascota_idBanio1`, `estiloCortePelaje_idCorte1`),
  INDEX `fk_reserva_desparacitacion1_idx` (`desparacitacion_CodDesparas` ASC),
  INDEX `fk_reserva_factura1_idx` (`factura_codFactura` ASC, `factura_Domicilio_idDomicilio` ASC),
  INDEX `fk_reserva_persona1_idx` (`persona_identifPersona` ASC),
  INDEX `fk_reserva_paseoMascota1_idx` (`paseoMascota_idPaseo` ASC),
  INDEX `fk_reserva_servicioGuarderia1_idx` (`servicioGuarderia_idGuarderia` ASC),
  INDEX `fk_reserva_baniarMascota1_idx` (`baniarMascota_idBanio1` ASC),
  INDEX `fk_reserva_estiloCortePelaje1_idx` (`estiloCortePelaje_idCorte1` ASC),
  CONSTRAINT `fk_reserva_desparacitacion1`
    FOREIGN KEY (`desparacitacion_CodDesparas`)
    REFERENCES `GroomingDog`.`desparacitacion` (`CodDesparas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_factura1`
    FOREIGN KEY (`factura_codFactura` , `factura_Domicilio_idDomicilio`)
    REFERENCES `GroomingDog`.`factura` (`codFactura` , `Domicilio_idDomicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_persona1`
    FOREIGN KEY (`persona_identifPersona`)
    REFERENCES `GroomingDog`.`persona` (`identifPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_paseoMascota1`
    FOREIGN KEY (`paseoMascota_idPaseo`)
    REFERENCES `GroomingDog`.`paseoMascota` (`idPaseo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_servicioGuarderia1`
    FOREIGN KEY (`servicioGuarderia_idGuarderia`)
    REFERENCES `GroomingDog`.`localYGuarderia` (`idGuarderia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_baniarMascota1`
    FOREIGN KEY (`baniarMascota_idBanio1`)
    REFERENCES `GroomingDog`.`baniarMascota` (`idBanio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reserva_estiloCortePelaje1`
    FOREIGN KEY (`estiloCortePelaje_idCorte1`)
    REFERENCES `GroomingDog`.`estiloCortePelaje` (`idCorte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`articuloPaseo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`articuloPaseo` (
  `idArticulo` INT(10) NOT NULL COMMENT 'Éste es el identificador único del artículo.',
  `nombArticulo` VARCHAR(45) NOT NULL COMMENT 'Nombre o denominación del artículo que usará la mascota.',
  `descripArticulos` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa el o los artículos que la mascota puede usar, por solicitud de su dueño, con sus principales características.',
  `ObserArtic` VARCHAR(45) NULL COMMENT 'Observaciones de características o condiciones particulares concernientes al artículo.',
  PRIMARY KEY (`idArticulo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`productoParaGuarderia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`productoParaGuarderia` (
  `idProducto` INT(10) NOT NULL COMMENT 'Es el identificador único del producto, dentro de la base de datos.',
  `nombProduc` VARCHAR(45) NOT NULL COMMENT 'Nombre del producto a utilizar.',
  `descripProducto` VARCHAR(45) NOT NULL COMMENT 'Ésta entidad representa los productos que se le puede suministrar a las mascotas mientras estén recibiendo alguno(s) del (los) servicio(s), con sus principales características.',
  PRIMARY KEY (`idProducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`canetVacunas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`canetVacunas` (
  `idCarnet` INT(10) NOT NULL COMMENT 'Éste es el identificador único del carné de vacunas',
  `nombVacuna` VARCHAR(45) NOT NULL COMMENT 'Si tiene o no actualizada la vacuna antirrábica.',
  `descripCarnVacuna` VARCHAR(45) NULL COMMENT 'Ésta entidad representa al carnet de vacunación de la mascota, con sus principales características.',
  PRIMARY KEY (`idCarnet`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`mascota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`mascota` (
  `idMascota` INT(10) NOT NULL COMMENT 'Éste es el identificador único de la mascota.',
  `nombMascota` VARCHAR(45) NOT NULL COMMENT 'Nombre como entiende llamado la mascota.',
  `razaMascota` VARCHAR(45) NOT NULL COMMENT 'Raza de la mascota.',
  `colorMascota` VARCHAR(45) NOT NULL COMMENT 'Color del pelaje de la mascota.',
  `pesoMascota` INT(10) NOT NULL COMMENT 'Peso de la mascota.',
  `esterilizMasco` TINYINT NOT NULL COMMENT 'Si está o no esterilizada la mascota.',
  `fechaNaciMasc` DATE NOT NULL COMMENT 'Fecha de nacimiento de la mascota.',
  `historialMasco` VARCHAR(45) NOT NULL COMMENT 'Historial de servicios que ha recibido la mascota.',
  `observMascota` VARCHAR(45) NULL COMMENT 'Ésta entidad representa a la mascota, con sus principales características.',
  `reserva_iddReserva` INT(10) NOT NULL,
  `reserva_baniarMascota_idBanio` INT(10) NOT NULL,
  `reserva_desparacitacion_CodDesparas` INT(10) NOT NULL,
  `reserva_factura_codFactura` INT(10) NOT NULL,
  `reserva_factura_Domicilio_idDomicilio` INT(10) NOT NULL,
  `reserva_persona_identifPersona` INT(10) NOT NULL,
  `reserva_estiloCortePelaje_idCorte` INT(10) NOT NULL,
  `canetVacunas_idCarnet` INT(10) NOT NULL,
  PRIMARY KEY (`idMascota`, `reserva_iddReserva`, `reserva_baniarMascota_idBanio`, `reserva_desparacitacion_CodDesparas`, `reserva_factura_codFactura`, `reserva_factura_Domicilio_idDomicilio`, `reserva_persona_identifPersona`, `reserva_estiloCortePelaje_idCorte`, `canetVacunas_idCarnet`),
  INDEX `fk_mascota_reserva1_idx` (`reserva_iddReserva` ASC, `reserva_baniarMascota_idBanio` ASC, `reserva_desparacitacion_CodDesparas` ASC, `reserva_factura_codFactura` ASC, `reserva_factura_Domicilio_idDomicilio` ASC, `reserva_persona_identifPersona` ASC, `reserva_estiloCortePelaje_idCorte` ASC),
  INDEX `fk_mascota_canetVacunas1_idx` (`canetVacunas_idCarnet` ASC),
  CONSTRAINT `fk_mascota_reserva1`
    FOREIGN KEY (`reserva_iddReserva` , `reserva_baniarMascota_idBanio` , `reserva_desparacitacion_CodDesparas` , `reserva_factura_codFactura` , `reserva_factura_Domicilio_idDomicilio` , `reserva_persona_identifPersona` , `reserva_estiloCortePelaje_idCorte`)
    REFERENCES `GroomingDog`.`reserva` (`iddReserva` , `baniarMascota_idBanio` , `desparacitacion_CodDesparas` , `factura_codFactura` , `factura_Domicilio_idDomicilio` , `persona_identifPersona` , `estiloCortePelaje_idCorte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mascota_canetVacunas1`
    FOREIGN KEY (`canetVacunas_idCarnet`)
    REFERENCES `GroomingDog`.`canetVacunas` (`idCarnet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`telefono` (
  `numTelef` INT(10) NOT NULL,
  `tipoTelef` VARCHAR(45) NOT NULL,
  `Domicilio_idDomicilio` INT(10) NOT NULL,
  PRIMARY KEY (`numTelef`, `Domicilio_idDomicilio`),
  INDEX `fk_telefono_Domicilio1_idx` (`Domicilio_idDomicilio` ASC),
  CONSTRAINT `fk_telefono_Domicilio1`
    FOREIGN KEY (`Domicilio_idDomicilio`)
    REFERENCES `GroomingDog`.`Domicilio` (`idDomicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`desparacitante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`desparacitante` (
  `idDesparacitante` INT(10) NOT NULL,
  `nombDesparc` VARCHAR(45) NOT NULL,
  `desparacitacion_CodDesparas` INT(10) NOT NULL,
  PRIMARY KEY (`idDesparacitante`, `desparacitacion_CodDesparas`),
  INDEX `fk_desparacitante_desparacitacion1_idx` (`desparacitacion_CodDesparas` ASC),
  CONSTRAINT `fk_desparacitante_desparacitacion1`
    FOREIGN KEY (`desparacitacion_CodDesparas`)
    REFERENCES `GroomingDog`.`desparacitacion` (`CodDesparas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`articuloPaseo_has_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`articuloPaseo_has_factura` (
  `articuloPaseo_idArticulo` INT(10) NOT NULL,
  `factura_codFactura` INT(10) NOT NULL,
  `factura_Domicilio_idDomicilio` INT(10) NOT NULL,
  PRIMARY KEY (`articuloPaseo_idArticulo`, `factura_codFactura`, `factura_Domicilio_idDomicilio`),
  INDEX `fk_articuloPaseo_has_factura_factura1_idx` (`factura_codFactura` ASC, `factura_Domicilio_idDomicilio` ASC),
  INDEX `fk_articuloPaseo_has_factura_articuloPaseo1_idx` (`articuloPaseo_idArticulo` ASC),
  CONSTRAINT `fk_articuloPaseo_has_factura_articuloPaseo1`
    FOREIGN KEY (`articuloPaseo_idArticulo`)
    REFERENCES `GroomingDog`.`articuloPaseo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_articuloPaseo_has_factura_factura1`
    FOREIGN KEY (`factura_codFactura` , `factura_Domicilio_idDomicilio`)
    REFERENCES `GroomingDog`.`factura` (`codFactura` , `Domicilio_idDomicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroomingDog`.`productoParaGuarderia_has_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GroomingDog`.`productoParaGuarderia_has_factura` (
  `productoParaGuarderia_idProducto` INT(10) NOT NULL,
  `factura_codFactura` INT(10) NOT NULL,
  `factura_Domicilio_idDomicilio` INT(10) NOT NULL,
  PRIMARY KEY (`productoParaGuarderia_idProducto`, `factura_codFactura`, `factura_Domicilio_idDomicilio`),
  INDEX `fk_productoParaGuarderia_has_factura_factura1_idx` (`factura_codFactura` ASC, `factura_Domicilio_idDomicilio` ASC),
  INDEX `fk_productoParaGuarderia_has_factura_productoParaGuarderia1_idx` (`productoParaGuarderia_idProducto` ASC),
  CONSTRAINT `fk_productoParaGuarderia_has_factura_productoParaGuarderia1`
    FOREIGN KEY (`productoParaGuarderia_idProducto`)
    REFERENCES `GroomingDog`.`productoParaGuarderia` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productoParaGuarderia_has_factura_factura1`
    FOREIGN KEY (`factura_codFactura` , `factura_Domicilio_idDomicilio`)
    REFERENCES `GroomingDog`.`factura` (`codFactura` , `Domicilio_idDomicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
